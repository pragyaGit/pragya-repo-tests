{"ast":null,"code":"var _jsxFileName = \"/Users/pragya/Documents/TEST/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js\";\nimport React, { Component } from \"react\"; // import axios from 'axios';\n\nimport \"./App.css\";\n\nconst formatNumber = number => new Intl.NumberFormat(\"en\", {\n  minimumFractionDigits: 2\n}).format(number);\n\nconst urls = [\"api/branch1.json\", \"api/branch2.json\", \"api/branch3.json\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchSpace = async event => {\n      let keyword = event.target.value;\n      console.log(\"keyword - \", keyword);\n      await this.setState({\n        search: keyword\n      });\n      const products = this.state;\n      var data = products.products;\n      var filteredProducts = data.filter(data => {\n        if (this.state.search === null || this.state.search === \"\") {\n          return data.products;\n        } else {\n          data.products = data.products.filter(product => product.name.toLowerCase().includes(this.state.search.toLowerCase()));\n          return data.products;\n        }\n      });\n      console.log(\"filteredProducts - \", filteredProducts);\n    };\n\n    this.componentDidMount = () => {\n      Promise.all([fetch(\"api/branch1.json\"), fetch(\"api/branch2.json\"), fetch(\"api/branch3.json\")]).then(function (responses) {\n        // Get a JSON object from each of the responses\n        return Promise.all(responses.map(function (response) {\n          return response.json();\n        }));\n      }).then(data => {\n        // Log the data to the console\n        // You would do something with both sets of data here\n        this.setState({\n          products: data,\n          filteredProducts: data\n        });\n        console.log(\"products\", this.state.products);\n        console.log(\"data\", data);\n      }).catch(function (error) {\n        // if there's an error, log it\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      products: [],\n      filteredProducts: [],\n      sum: [],\n      search: \"\"\n    };\n  }\n\n  render() {\n    const products = this.state;\n    const ProductTotal = products.products.filter(data => {\n      if (this.state.search === null || this.state.search === \"\") {\n        return data.products;\n      } else {\n        data.products = data.products.filter(product => product.name.toLowerCase().includes(this.state.search.toLowerCase()));\n        return data.products;\n      }\n    }).reduce((totalProducts, product) => {\n      return totalProducts + product.products.reduce((total, product) => {\n        return total + product.unitPrice;\n      }, 0);\n    }, 0);\n    console.log(\"ProductTotal - \", ProductTotal); // const ProductTotal1 = products.products.map(({ products }) => {\n    //   return products.reduce((prev, { unitPrice }) => {\n    //     return +prev['unitPrice'].replace(/,/g, '') +  +unitPrice.replace(/,/g, '');\n    //   });\n    // });\n    // const total = ProductTotal1.reduce((prev, next) => prev + next);\n    // console.log(total);\n    // const sum = products.products.reduce((acc, course) => {\n    //   acc[course.branchId] = course.products.reduce(\n    //     (acc, el) => acc + el.unitPrice,\n    //     0\n    //   );\n    //   return acc;\n    // }, {});\n    // this.setState({ sum: sum});\n    // console.log(\"sum - \", sum);\n    // const exercises_courses = products.products.map(item => {\n    //   item.products.reduce((sum, part) => sum + part.unitPrice, 0);\n    //   return sum;\n    // });\n    // const sum_all = exercises_courses.reduce(\n    //   (sum, sum_one) => sum + sum_one,\n    //   0\n    // );\n    // console.log(\"exercises_courses - \", exercises_courses);\n    // console.log(\"sum all\", sum_all);\n    ///////search/////////////////\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Search Products\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.searchSpace(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Revenue\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, filteredProducts.products.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, item.products.map((c, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, c.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, c.unitPrice), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, ProductTotal)))));\n  }\n\n}\n\nexport default App; // {\n//   this.state.todos &&\n//   Object.keys(icon).map(function (element) {\n//      return <tr>\n//        <td>{element}</td>\n//        <td>{icon[element]}</td>\n//      </tr>;\n//     })\n// }\n/////////////\n// {products.products.map(image => <div>{image.name}</div>)}\n//    {\n//     products.products.filter((data)=>{\n//       if(this.state.search == null)\n//         return data\n//       else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n//         return data\n// }\n// }).map(function (element) {\n//        return <tr>\n//          <td>{element.name}</td>\n//          <td>{element.unitPrice}</td>\n//        </tr>;\n//       })\n//   }","map":{"version":3,"sources":["/Users/pragya/Documents/TEST/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js"],"names":["React","Component","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","urls","App","constructor","props","searchSpace","event","keyword","target","value","console","log","setState","search","products","state","data","filteredProducts","filter","product","name","toLowerCase","includes","componentDidMount","Promise","all","fetch","then","responses","map","response","json","catch","error","sum","render","ProductTotal","reduce","totalProducts","total","unitPrice","e","item","index","c","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = number =>\n  new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\nconst urls = [\"api/branch1.json\", \"api/branch2.json\", \"api/branch3.json\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      filteredProducts: [],\n      sum: [],\n      search: \"\"\n    };\n  }\n\n  searchSpace = async event => {\n    let keyword = event.target.value;\n    console.log(\"keyword - \", keyword);\n    await this.setState({ search: keyword });\n    const products = this.state;\n    var data = products.products;\n    var filteredProducts = data.filter(data => {\n      if (this.state.search === null || this.state.search === \"\") {\n        return data.products;\n      } else {\n        data.products = data.products.filter(product =>\n          product.name.toLowerCase().includes(this.state.search.toLowerCase())\n        );\n        return data.products;\n      }\n    });\n    console.log(\"filteredProducts - \", filteredProducts);\n  };\n\n  componentDidMount = () => {\n    Promise.all([\n      fetch(\"api/branch1.json\"),\n      fetch(\"api/branch2.json\"),\n      fetch(\"api/branch3.json\")\n    ])\n      .then(function(responses) {\n        // Get a JSON object from each of the responses\n        return Promise.all(\n          responses.map(function(response) {\n            return response.json();\n          })\n        );\n      })\n      .then(data => {\n        // Log the data to the console\n        // You would do something with both sets of data here\n        this.setState({ products: data, filteredProducts: data });\n        console.log(\"products\", this.state.products);\n        console.log(\"data\", data);\n      })\n      .catch(function(error) {\n        // if there's an error, log it\n        console.log(error);\n      });\n  };\n\n  render() {\n    const products = this.state;\n    const ProductTotal = products.products\n      .filter(data => {\n        if (this.state.search === null || this.state.search === \"\") {\n          return data.products;\n        } else {\n          data.products = data.products.filter(product =>\n            product.name.toLowerCase().includes(this.state.search.toLowerCase())\n          );\n          return data.products;\n        }\n      })\n      .reduce((totalProducts, product) => {\n        return (\n          totalProducts +\n          product.products.reduce((total, product) => {\n            return total + product.unitPrice;\n          }, 0)\n        );\n      }, 0);\n    console.log(\"ProductTotal - \", ProductTotal);\n\n    // const ProductTotal1 = products.products.map(({ products }) => {\n    //   return products.reduce((prev, { unitPrice }) => {\n    //     return +prev['unitPrice'].replace(/,/g, '') +  +unitPrice.replace(/,/g, '');\n    //   });\n    // });\n\n    // const total = ProductTotal1.reduce((prev, next) => prev + next);\n\n    // console.log(total);\n\n    // const sum = products.products.reduce((acc, course) => {\n    //   acc[course.branchId] = course.products.reduce(\n    //     (acc, el) => acc + el.unitPrice,\n    //     0\n    //   );\n    //   return acc;\n    // }, {});\n\n    // this.setState({ sum: sum});\n    // console.log(\"sum - \", sum);\n    // const exercises_courses = products.products.map(item => {\n    //   item.products.reduce((sum, part) => sum + part.unitPrice, 0);\n    //   return sum;\n    // });\n    // const sum_all = exercises_courses.reduce(\n    //   (sum, sum_one) => sum + sum_one,\n    //   0\n    // );\n\n    // console.log(\"exercises_courses - \", exercises_courses);\n    // console.log(\"sum all\", sum_all);\n    ///////search/////////////////\n\n    return (\n      <div className=\"product-list\">\n        <label>Search Products</label>\n        <input type=\"text\" onChange={e => this.searchSpace(e)} />\n\n        <table>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Revenue</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredProducts.products.map((item, index) => (\n              <div key={index}>\n                {item.products.map((c, i) => (\n                  <tr key={i}>\n                    <td>{c.name}</td>\n                    <td>{c.unitPrice}</td>\n                    <hr />\n                  </tr>\n                ))}\n              </div>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>Total</td>\n              <td>{ProductTotal}</td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// {\n//   this.state.todos &&\n//   Object.keys(icon).map(function (element) {\n//      return <tr>\n//        <td>{element}</td>\n//        <td>{icon[element]}</td>\n//      </tr>;\n//     })\n// }\n/////////////\n// {products.products.map(image => <div>{image.name}</div>)}\n\n//    {\n//     products.products.filter((data)=>{\n//       if(this.state.search == null)\n//         return data\n//       else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n//         return data\n// }\n// }).map(function (element) {\n//        return <tr>\n//          <td>{element.name}</td>\n//          <td>{element.unitPrice}</td>\n//        </tr>;\n//       })\n//   }\n"]},"metadata":{},"sourceType":"module"}